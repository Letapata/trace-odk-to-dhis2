version: '3.3'

volumes:
  dhis-volume:

services:
  mongo:
    container_name: openhim-mongo
    image: mongo:4.2
    volumes:
      - './data/mongo:/data/db'

  core:
    container_name: openhim-core
    image: jembi/openhim-core:5
    environment:
      - mongo_url=mongodb://mongo/openhim
      - mongo_atnaUrl=mongodb://mongo/openhim
      - api_authenticationTypes=["token", "basic"]
    ports:
      - "8080:8080"
      - "5000:5000"
      - "5001:5001"
      - "5050:5050"
      - "5051:5051"
      - "5052:5052"
    depends_on:
      - mongo

  console:
    container_name: openhim-console
    image: jembi/openhim-console:1.13
    ports:
        - "9000:80"
    
  # container for executing config import scripts for setting up initial config
  mapper-config-importer:
    container_name: mapper-config-importer
    image: jembi/instantohie-config-importer
    restart: on-failure
    environment:
      OPENHIM_API_HOSTNAME: 'openhim-core'
      OPENHIM_API_PORT: 8080
      OPENHIM_API_USERNAME: 'root@openhim.org'
      OPENHIM_API_PASSWORD: 'openhim-password'
      # Reject unauthorised is only needed if the OpenHIM's SSL is not setup
      NODE_TLS_REJECT_UNAUTHORIZED: 0
    volumes:
      - type: bind
        source: ./importer/volume
        target: /importer
    # This command will only attempt to import the OpenHIM config when the heartbeat responds with a 2xx
    command: sh -c "wait-on -t 60000 https-get://core:8080/heartbeat && node openhimConfig.js"
    depends_on:
      - core

  mapper:
    container_name: mapper
    image: jembi/openhim-mediator-mapping:v0.1.0
    restart: on-failure
    environment:
      - OPENHIM_URL=https://core:8080
      - OPENHIM_USERNAME=root@openhim.org
      - OPENHIM_PASSWORD=trace101
    ports:
      - "3003:3003"
    volumes:
      - "./mapper-endpoints:/app/endpoints"
    depends_on:
      - core

  postgres:
    container_name: dhis-postgres
    image: kartoza/postgis:11.0-2.5
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_DB=dhis
      - POSTGRES_PASSWORD=dhis
      - POSTGRES_USER=dhis
    ports:
      - '5432:5432'
    volumes:
      - dhis-volume:/var/lib/postgresql/data
      - ./ODKAggregate/create_db_and_user.sql:/create_db_and_user.sql
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 12

  # adapted from https://github.com/pgracio/dhis2-docker
  dhis:
    container_name: dhis-web
    image: dhis2/dhis2-web:2.30-tomcat7-jre8-latest
    environment:
      JAVA_OPTS: '-Xmx1024m -Xms4000m'
      DHIS2_HOME: '/opt/dhis2/config'
      POSTGRES_DB: dhis
    ports:
      - '8081:8080'
    depends_on:
      - postgres
    volumes:
      - ./dhis2/wait-for-it.sh:/wait-for-it.sh
      - ./dhis2/dhis.conf:/opt/dhis2/config/dhis.conf
      - ./dhis2/server.xml:/usr/local/tomcat/conf/server.xml
    entrypoint: ./wait-for-it.sh -t 0 postgres:5432 --
    command: catalina.sh run # https://github.com/docker/compose/issues/3140
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8080']
      interval: 10s
      timeout: 10s
      retries: 12
